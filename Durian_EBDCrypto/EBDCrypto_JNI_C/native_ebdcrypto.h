/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class givtech_ebdcrypto */

#ifndef _Included_native_ebdcrypto_
#define _Included_native_ebdcrypto_
#ifdef __cplusplus
extern "C" {
#endif
#undef ebdcrypto_AES_AES_BLOCK_SIZE
#define ebdcrypto_AES_AES_BLOCK_SIZE 16L
#undef ebdcrypto_AES_AES128
#define ebdcrypto_AES_AES128 16L
#undef ebdcrypto_AES_AES192
#define ebdcrypto_AES_AES192 24L
#undef ebdcrypto_AES_AES256
#define ebdcrypto_AES_AES256 32L
#undef ebdcrypto_AES_ENCRYPT
#define ebdcrypto_AES_ENCRYPT 1L
#undef ebdcrypto_AES_DECRYPT
#define ebdcrypto_AES_DECRYPT 0L
/*
 * Class:     ebdcrypto_AES
 * Method:    nativeAESCBC
 * Signature: (I[BII[BI[BII[BI)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_AES_nativeAESCBC
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint, jbyteArray, jint, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     ebdcrypto_DRBG
 * Method:    nativeDRBGRandomGen
 * Signature: ([BII)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_DRBG_nativeDRBGRandomGen
  (JNIEnv *, jclass, jbyteArray, jint, jint);

#undef ebdcrypto_ECDSA_SIGN
#define ebdcrypto_ECDSA_SIGN 1L
#undef ebdcrypto_ECDSA_VERIFY
#define ebdcrypto_ECDSA_VERIFY 0L
#undef ebdcrypto_ECDSA_SHA224
#define ebdcrypto_ECDSA_SHA224 33L
#undef ebdcrypto_ECDSA_SHA256
#define ebdcrypto_ECDSA_SHA256 34L
#undef ebdcrypto_ECDSA_SHA384
#define ebdcrypto_ECDSA_SHA384 35L
#undef ebdcrypto_ECDSA_SHA512
#define ebdcrypto_ECDSA_SHA512 36L
/*
 * Class:     ebdcrypto_ECDSA
 * Method:    nativeECDSAgenkeypair
 * Signature: ([BI[I[BI[I[BI[I)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_ECDSA_nativeECDSAgenkeypair
  (JNIEnv *, jobject, jbyteArray, jint, jintArray, jbyteArray, jint, jintArray, jbyteArray, jint, jintArray);

/*
 * Class:     ebdcrypto_ECDSA
 * Method:    nativeECDSAgeneratesignature
 * Signature: (I[BII[BII[BI[I[BI[I)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_ECDSA_nativeECDSAgeneratesignature
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jintArray, jbyteArray, jint, jintArray);

/*
 * Class:     ebdcrypto_ECDSA
 * Method:    nativeECDSAverifysignature
 * Signature: (I[BII[BII[BII[BII[BII)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_ECDSA_nativeECDSAverifysignature
  (JNIEnv *, jobject, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     ebdcrypto_GenerateCertCSR
 * Method:    nativeGenPubCSR
 * Signature: ([BII[BII[BII[BII[BII[BII[BII[BII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_ebdcrypto_GenerateCertCSR_nativeGenPubCSR
  (JNIEnv *, jobject, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint, jbyteArray, jint, jint);

#undef ebdcrypto_SHA2_SHA224
#define ebdcrypto_SHA2_SHA224 33L
#undef ebdcrypto_SHA2_SHA256
#define ebdcrypto_SHA2_SHA256 34L
#undef ebdcrypto_SHA2_SHA384
#define ebdcrypto_SHA2_SHA384 35L
#undef ebdcrypto_SHA2_SHA512
#define ebdcrypto_SHA2_SHA512 36L
#undef ebdcrypto_SHA2_SHA224_DIGEST_LENGTH
#define ebdcrypto_SHA2_SHA224_DIGEST_LENGTH 28L
#undef ebdcrypto_SHA2_SHA256_DIGEST_LENGTH
#define ebdcrypto_SHA2_SHA256_DIGEST_LENGTH 32L
#undef ebdcrypto_SHA2_SHA384_DIGEST_LENGTH
#define ebdcrypto_SHA2_SHA384_DIGEST_LENGTH 48L
#undef ebdcrypto_SHA2_SHA512_DIGEST_LENGTH
#define ebdcrypto_SHA2_SHA512_DIGEST_LENGTH 64L
/*
 * Class:     ebdcrypto_SHA2
 * Method:    nativesha224
 * Signature: ([BII[BI)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_SHA2_nativesha224
  (JNIEnv *, jobject, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     ebdcrypto_SHA2
 * Method:    nativesha256
 * Signature: ([BII[BI)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_SHA2_nativesha256
  (JNIEnv *, jobject, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     ebdcrypto_SHA2
 * Method:    nativesha384
 * Signature: ([BII[BI)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_SHA2_nativesha384
  (JNIEnv *, jobject, jbyteArray, jint, jint, jbyteArray, jint);

/*
 * Class:     ebdcrypto_SHA2
 * Method:    nativesha512
 * Signature: ([BII[BI)I
 */
JNIEXPORT jint JNICALL Java_ebdcrypto_SHA2_nativesha512
  (JNIEnv *, jobject, jbyteArray, jint, jint, jbyteArray, jint);


#ifdef __cplusplus
}
#endif
#endif
